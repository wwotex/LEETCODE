import sys
import time
from typing import List


class Solution:
	def threeSumClosest(self, nums: List[int], target: int) -> int:
		nums.sort()
		n = len(nums)
		ans = 0
		diff = sys.maxsize

		for i in range(n):
			l , r = i + 1, n - 1
			while l < r:
				currSum = nums[i] + nums[l] + nums[r]
				if currSum == target:
					return currSum
				if currSum > target:
					r -= 1
				else:
					l += 1
				if abs(target - currSum) < diff:
					ans = currSum
					diff = abs(target - currSum)
		return ans

# class Solution:
#     def threeSumClosest(self, nums: List[int], target: int) -> int:
#         nums.sort()
#         N = len(nums) - 1
#         closest = float('inf')
#         for i, el in enumerate(nums):
#             # if i >= N: break

#             if i == 0 or nums[i-1] != el:
#                 left, right = i+1, N

#                 while left < right:
#                     curr_sum = el + nums[left] + nums[right]
#                     if abs(curr_sum - target) < abs(closest - target): closest = curr_sum
#                     if curr_sum < target:
#                         left += 1
#                     else:
#                         right -= 1

#         return closest




sol = Solution()
nums = [-907,582,312,696,-686,751,165,117,93,275,-901,-57,821,921,-133,-55,373,623,329,729,735,595,771,574,154,52,-275,-362,-819,197,-206,-829,-255,480,597,-339,-970,-992,-702,432,545,164,-203,966,-629,719,988,505,684,-557,849,-615,12,411,361,15,166,155,384,930,-83,-505,-518,-77,-740,944,-858,433,-69,-510,522,73,-879,-155,875,763,-722,-201,342,-608,314,-744,536,-571,792,107,-491,806,-534,-531,777,587,-538,-132,-222,-590,-993,-135,71,135,-695,750,-64,39,-158,598,-637,-580,382,-583,130,-689,-217,-501,64,-727,-511,-427,922,-111,564,138,-986,409,370,964,175,-312,-626,-309,651,466,908,292,-225,453,50,-862,953,-187,-760,-308,-515,439,-602,-536,524,-622,-33,532,3,-381,-123,-3,-67,682,-765,709,-253,-977,610,-122,969,-114,-585,576,-435,726,57,784,-817,-152,-188,150,991,-790,693,-855,-311,-183,276,549,-569,-390,-353,-963,711,454,66,970,92,456,496,-728,58,237,-844,747,643,-522,-80,136,-918,26,0,-625,631,10,-932,961,-299,-665,-213,-821,-973,14,94,-895,-926,258,339,-383,556,-30,879,-317,-467,-403,701,338,859,483,-881,-472,-273,687,578,-391,566,-17,-343,-239,786,142,710,788,277,252,-568,-954,901,867,182,-827,525,428,-934,83,25,-508,104,-659,-843,-910,-452,-238,-485,-955,124,520,-656,629,-209,-666,-710,633,552,-733,743,464,-36,654,-240,269,213,87,-1000,114,-714,-7,504,628,-408,422,-507,-97,429,-997,810,268,259,501,-874,-935,48,-610,353,33,-423,-261,-335,-173,-489,977,61,727,-868,844,-332,605,-216,-526,249,406,-742,335,-74,638,43,-1,889,523,-634,272,601,-499,-49,-270,398,-591,869,910,-46,435,-453,-699,16,450,385,394,-288,769,-700,-345,-124,-917,567,519,-784,-976,242,987,-2,-547,613,-321,485,-600,-775,-777,-417,65,554,186,-770,706,-552,305,645,293,686,-334,195,656,700,233,762,577,380,-542,979,876,-841,-743,-751,-635,-454,-857,158,795,-90,495,-737,-15,201,334,-244,-815,894,-39,300,352,34,-11,-153,-838,652,-219,-58,-267,-648,518,-296,-177,-741,-150,717,408,-232,-231,-387,-415,56,350,-886,253,367,395,824,572,-54,714,215,-14,-999,-911,470,962,279,848,823,286,858,-549,-214,-523,569,-748,754,307,360,-372,479,-481,-776,766,510,-437,-421,-286,-532,860,-32,-167,801,68,-468,-99,915,313,-773,-671,996,-820,281,-593,-466,-229,-643,139,299,-329,972,-517,-333,120,198,707,-246,-889,648,-305,-783,674,959,333,-938,692,998,193,118,-559,606,28,-707,-832,171,-9,828,-247,374,839,586,817,221,153,-148,-208,306,635,835,244,756,330,283,-48,-496,-752,-119,270,170,-277,-480,561,-905,-971,345,85,-388,112,19,324,127,-199,899,-112,796,-840,-951,-493,404,-897,-218,-38,49,53,658,-645,-426,632,-611,-287,512,-563,745,-207,207,-814,688,900,857,-262,377,-847,-555,722,59,376,-117,926,-215,533,-869,97,-424,-113,-588,-47,797,-18,-543,665,583,274,-230,-409,-592,880,-245,791,-609,916,-612,755,691,956,-456,-980,-586,-202,-328,-276,591,842,327,-352,18,163,-24,-937,223,-771,-393,773,-806,151,-65,862,-650,-786,322,-965,-670,-616,-94,72,364,-175,386,-260,-859,-371,-798,-250,46,837,-210,219,770,443,131,618,282,666,-169,-439,-26,152,303,-290,-825,11,-205,502,893,581,664,-831,744,-354,-43,-974,391,291,679,-667,-358,35,-794,-813,620,-715,-242,-392,-662,-405,799,-91,-193,720,469,-731,937,-498,866,-761,20,-848,424,-170,-360,653,-692,-400,-562,-982,816,-194,-256,508,-476,-433,542,819,-947,265,630,-436,-837,-527,-223,511,2,-854,793,-198,-21,-41,-258,-658,548,226,-931,-729,-785,128,-684,-620,820,-323,-639,514,-621,-165,414,-455,477,-268,-871,982,264,7,-53,-513,251,-939,-913,-655,-792,-369,832,699,-429,-86,948,995,-736,-474,-368,-735,471,474,507,-484,452,-34,-631,-252,187,789,-300,-475,619,-799,-189,-279,728,-688,-778,-108,-884,296,807,-584,184,70,-892,379,105,-292,455,6,176,-71,-149,517,-103,-180,994,344,-726,280,210,-553,-763,-863,-303,-22,-678,-860,-271,236,681,-92,-754,91,412,-464,457,-624,-338,-646,418,941,818,615,624,-344,326,513,-364,781,-876,-972,-84,-861,-266,-115,-116,-349,-434,509,-969,660,381,676,78,-550,718,-399,315,-640,-676,-473,-425,-341,304,401,-37,690,885,850,898,-681,870,423,321,-357,705,625,855,-168,-25,-234,-604,188,-340,-912,798,351,284,290,-181,-459,831,203,809,721,733,776,736,958,800,-720,644,40,-160,-220,678,634,-850,-644,813,472,-487,698,723,-224,1,247,-787,132,-554,826,-129,-578,396,642,732,-835,616,768,-102,-599,403,-185]
target = -5698
average = 0
for el in range(10):
    starttime = time.time()
    sol.threeSumClosest(nums, target)
    diff = time.time() - starttime
    average += diff
print(f'time taken: {average/10}')